#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

unless defined? LOADED_DEFAULT_CONFIG
  LOADED_DEFAULT_CONFIG = true
  require 'compass'
  Compass.add_project_configuration 'compass/config.rb' 
end

### Routing ##################################################################

route '/static/*' do
  # /static/foo.html/ → /foo.html
  item.identifier[7..-2]
end

route '/404/' do
  '/404.html'
end

route '/assets/style/partials/*/' do
  # Don't output partials, so return nil
  nil
end

route '/assets/style/*/' do
  # path with(out) version
  item.identifier.chop + '.' + item[:extension]
end

route '*' do
  if item.binary?
    item.identifier.chop + '.' + item[:extension]
  elsif item[:is_partial] || item[:kind] == 'article'
    # Don’t output partial items (e.g. sub-stylesheets)
    nil
  elsif item[:path]
    item[:path]
  else
    # Place each file in its own directory
    rep.item.identifier + 'index.html'
  end
end

### Compilation ##############################################################

compile '/assets/style/partials/*/' do
  # Don’t compile partials
end

compile '/assets/style/*/' do
  filter :sass, Compass.sass_engine_options
  # filter :relativize_paths, :type => :css
  # filter :rainpress
end

compile '/static/*' do
end

compile '/404/' do
  filter :erb
  layout '/default/'
  # filter TypographicalImprovementFilter, TypographicalImprovementFilterParams
end

compile '/sitemap/' do
  filter :erb
end

compile '/robots/' do
  filter :erb
end

compile '/' do
  filter :erb
  layout '/default/'
  # filter :relativize_paths, :type => :html
  # filter TypographicalImprovementFilter, TypographicalImprovementFilterParams
end

compile '*' do
  filter :erb if item[:is_dynamic]
  case item[:markdown]
  when 'advanced'
    filter :kramdown, :auto_ids => false
  when 'basic'
    filter :rdiscount
  end
  filter :remove_spacing_around_pre
  filter :add_ids_to_headers
  if item.identifier == '/release-notes/'
    filter :link_github_issues
  end

  case item[:type]
  when 'nep'
    layout '/nep/'
  when 'command'
    layout '/command/'
  when 'filter', 'helper'
    layout '/autodoc/'
  end
  layout '/default/'

  filter :add_toc
  filter :colorize_syntax, :is_fullpage => true
  # filter :relativize_paths, :type => :html unless item[:is_partial] || item[:kind] == 'article'
  # filter TypographicalImprovementFilter, TypographicalImprovementFilterParams
end

### Layouting ################################################################

layout '*', :erb
